name: Deploy Next.js SSG to GitHub Pages

on:
  pull_request:
    branches: [gh-pages]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NODE_ENV: production
  CI: true
  FOUNDRY_PROFILE: ci

jobs:
  build:
    environment: github-pages
    runs-on: ubuntu-latest
    env:
      ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
      PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
      SEPOLIA_RPC_URL: ${{ secrets.SEPOLIA_RPC_URL }}
    steps:
      # SetUp
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: foundry-rs/foundry-toolchain@v1
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ">=24"
          cache: "pnpm"
      - run: pnpm install

      # SetUp - Frontend
      - uses: actions/configure-pages@v5
        with:
          static_site_generator: next
      - name: Cache Front build artifacts
        uses: actions/cache@v4
        with:
          path: front/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      # Build & Upload artifacts
      - run: pnpm build
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./front/out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
